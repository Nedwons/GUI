/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rosad;

import java.io.File;
import static java.lang.Math.sqrt;
import javax.swing.*;
import static org.apache.commons.math3.special.Erf.erf;


/**
 *
 * @author Вадим
 */
public class View extends javax.swing.JFrame { //

    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        OpenButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SaveButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        fileSizeText = new javax.swing.JLabel();
        fileSizeLabel = new javax.swing.JLabel();
        MistakeQuantityText = new javax.swing.JLabel();
        MistakeQuantityLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        usefulVoltage = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        noiseVoltage = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        speed = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        frequency = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        OpenButton.setText("Open");
        OpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenButtonActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        fileSizeText.setText("Размер файла");

        fileSizeLabel.setText("(байт)");

        MistakeQuantityText.setText("Количество ошибочных блоков");

        MistakeQuantityLabel.setText("0");

        progressBar.setStringPainted(true);

        jLabel2.setText("U полезного сигнала, В");

        usefulVoltage.setText("7.35");
        usefulVoltage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usefulVoltageActionPerformed(evt);
            }
        });

        jLabel3.setText("U шума, В");

        noiseVoltage.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.6f), Float.valueOf(0.0f), Float.valueOf(6.0f), Float.valueOf(0.1f)));
        noiseVoltage.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                noiseVoltageStateChanged(evt);
            }
        });

        jLabel4.setText("Скорость передачи, Бод");

        speed.setText("50");
        speed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedActionPerformed(evt);
            }
        });

        jLabel5.setText("Тактовая частота, кГц");

        frequency.setText("50");
        frequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyActionPerformed(evt);
            }
        });

        jMenu1.setText("Файл");

        jMenuItem1.setText("Выход");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Помощь");

        jMenuItem2.setText("О программе");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(fileSizeLabel))
                            .addComponent(fileSizeText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(usefulVoltage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(noiseVoltage, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(MistakeQuantityText)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MistakeQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(OpenButton)
                        .addGap(123, 123, 123)
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveButton)
                        .addGap(98, 98, 98))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(frequency, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(speed, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 319, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 319, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MistakeQuantityText)
                            .addComponent(fileSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MistakeQuantityLabel)
                            .addComponent(fileSizeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usefulVoltage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noiseVoltage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenButton)
                    .addComponent(SaveButton)
                    .addComponent(startButton))
                .addGap(50, 50, 50))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 186, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 186, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    Controller controller = new Controller( this ); /**передаем ссылку на объект
     * класса Controller классу View */
    
    private File openPath, savePath; // contain path to the files
    private double mistakeProbability; // вероятность ошибки
    private long fileSize; // Размер файла
    private double usefulVoltageValue = 7.35; // Напряжение полезного сигнала
    private double noiseVoltageValue = 0.6; // Напряжение шума
    private int speedValue = 50; // Скорость передачи
    private int frequencyValue = 50; // Частота шумогенератора
    
    // File  Getters and Setters
    private void setOpenPath (File openPath) {  
        this.openPath = openPath;
    }
    private void setSavePath (File savePath) {
        this.savePath = savePath;
    }
    public File getOpenPath () {  
        return this.openPath;
    }
    public File getSavePath () {  
        return this.savePath;
    }
    
    // Getter и Setter добавления ошибок
    public void setProbability (double prbability) {
        mistakeProbability = (1 - prbability); 
    }
    public double getProbability () {
        return mistakeProbability;
    }
    
    // Getter и Setter размера файла
    public void setFileSize (long size) {
        this.fileSize = size; 
    }
    public int getFileSize() {
        return ( (int) fileSize);
    }
    
    // устанавливает количество ошибок
    public void setQuantityLabel(int quantity) {
        this.MistakeQuantityLabel.setText( String.valueOf(quantity) ); //
    }
    
    // Метод возвращает процент считанного файла    
    public int getPercent(int number) { // number - количество считанных блоков  
        int tempFileSize = this.getFileSize(); // размер файла
        int result = (int) (100 * number ) / tempFileSize; // вычисление процента
        return result;
    }
    
    // устанавливает значение progressBar
    public void setProgress(int number) {
        this.progressBar.setValue( getPercent( number ) );
    }
    
    // устанавливает значение напряжения полезного сигнала
    public void setUsefulVoltge(float numberInput) {
        usefulVoltageValue = numberInput; 
    }
    
    public double getUsefulVoltage() {
        return usefulVoltageValue; 
    }
    
    public void setNoiseVoltage(float value) {
        noiseVoltageValue = value;
    }
    
    public double getNoiseVoltage() {
        return noiseVoltageValue;
    }
    
    public void setSpeed(int value) {
        speedValue = value;
    }
    
    public int getSpeed() {
        return speedValue;
    }
    
    private void setFrequency(int numberInput) {
        frequencyValue = numberInput;
    }
    
    private int getFrequency() {
        return frequencyValue;
    }
    
//    Обработка события по нажатию кнопки Open
    private void OpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenButtonActionPerformed
        int o = fc.showOpenDialog(this); /** Открывает окно выбора
         * пути. return APPROVE_OPTION if the user approved the operation and
         * CANCEL_OPTION if the user cancelled it **/
        if (o == JFileChooser.APPROVE_OPTION) { // if "ok" is pressed
            setOpenPath( fc.getSelectedFile() ); /** returns selected file
                                                 and set to openPath varable;                                                 and set to openPath varable;
*/             
            long size = getOpenPath().length(); //определяем размер файла
            setFileSize( size ); 
            fileSizeLabel.setText(String.valueOf(size)); // выводим размер файла
        }
    }//GEN-LAST:event_OpenButtonActionPerformed

//    Обработка события по нажатию кнопки Save
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
         int s = fc.showSaveDialog(this);
         if (s == JFileChooser.APPROVE_OPTION) { // if "ok" is pressed
            setSavePath( fc.getSelectedFile() ); /** returns selected file
             *                                         and store to savePath var
             */
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    // запуск копирования
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        calculate (); // вычисление вероятности ошибки
        controller.copy(getOpenPath(), getSavePath(), getProbability());
    }//GEN-LAST:event_startButtonActionPerformed

    private void usefulVoltageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usefulVoltageActionPerformed
        String stringInput = usefulVoltage.getText(); // забираем значение вероятности
        float numberInput = Float.valueOf(stringInput); // converts srting to number 
        setUsefulVoltge(numberInput);
    }//GEN-LAST:event_usefulVoltageActionPerformed

    private void noiseVoltageStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_noiseVoltageStateChanged
       setNoiseVoltage((float) noiseVoltage.getValue());
    }//GEN-LAST:event_noiseVoltageStateChanged

    private void speedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedActionPerformed
        String stringInput = speed.getText(); // забираем значение вероятности
        int numberInput = Integer.parseInt( stringInput ); // converts srting to number
        setSpeed( numberInput );
    }//GEN-LAST:event_speedActionPerformed

    private void frequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyActionPerformed
        String stringInput = frequency.getText(); // забираем значение вероятности
        int numberInput = Integer.parseInt( stringInput ); // converts srting to number
        setFrequency( numberInput );
    }//GEN-LAST:event_frequencyActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // при нажатии меню "О программе" открывает соответствующее окно
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new AboutGUI().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void calculate () {
        double uSignal = getUsefulVoltage(); // максимальное напряжение полезного сигнала, В
        int b = getSpeed();                // скорость передачи, Бод
        double c = getNoiseVoltage(); // эффективное напряжение шума, В
        int f = getFrequency();          // тактовая частота генератора шума, кГц 
        
        double e = uSignal * uSignal / b; // энергия единичного сигнала
        final float deltaF = f * 1000 / 20; // полоса частот, воспроизводимая генератором шума
        double n = c * c / deltaF;
        
        double argument = sqrt( ((2 * e) / n ));
        double probability = 0.5 * (1 - erf( argument / sqrt(2)));
        System.out.println("e = "+e );
        System.out.println("deltaF = "+deltaF );
        System.out.println("n = "+n );
        System.out.println("probability = "+ probability );
        setProbability(probability);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MistakeQuantityLabel;
    private javax.swing.JLabel MistakeQuantityText;
    private javax.swing.JButton OpenButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JFileChooser fc;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JLabel fileSizeText;
    private javax.swing.JTextField frequency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JSpinner noiseVoltage;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField speed;
    private javax.swing.JButton startButton;
    private javax.swing.JTextField usefulVoltage;
    // End of variables declaration//GEN-END:variables

}

